genericity


泛型
总结：T <: Comparable[T] 表示T比Comparable年龄小，所以T必须为Comparable的子类。相反，T >: Son，T为Son的父类。

介绍：
泛型用于指定方法或类可以接受任意类型参数，参数在实际使用时才被确定，泛型可以有效地增强程序的适用性，使用泛型可以使得类或方法具有更强的通用性。

泛型类：指定类可以接受任意类型参数
泛型方法：指定方法可以接受任意类型参数


上界和下界：
在指定泛型类型时，有时需要界定泛型类型的范围，而不是接收任意类型。比如，要求某个泛型类型，必须是某个类的子类，这样在程序中就可以放心的调用父类的方法，程序才能正常的使用与运行。此时，就可以使用上下边界Bounds的特性。

Scala的上下边界特性允许泛型类型是某个类的子类，或者是某个类的父类。

1、 S<:T
这是类型上界的定义，也就是S必须是类型T的子类，自己本身也可以认为是自己的子类。

2、U>:T
这是类型下界的定义，也就是U必须是类型T的父类，自己本身也可以认为是自己的父类。

